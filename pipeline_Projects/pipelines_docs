Project :

github ---> Jenkins build maven Proejct: maven ----build docker image--------->Docker  ----push the image to docker hub -----> Docker hub


Step1: 
Launch EC2 instacne 
install java , maven , jenkins 
launch jenkins GUI 
create pipeline project in jenkins 
then 
select source code
then
select build trigger 
then 
select pipeline
jenkinsfile created in github for action of each step 
set maven tools :
go to manage jenkins ----- tools configuration ---- set up maven 

then set up maven build step in pipeline script

then build it , it will get sucess 

Step 2: you need to tell jenkins to build docker image 
to build docker image ,your application should have dockerfile 
then 
create dockerfile in your appllication 
then 
go to jenkins ---manage jenkins ---tools 
go to pipleline script 
    stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t narendra40/devops-integration .'
                }
devops-integration = image name 
narendra40 = docker hub alias name 


Step3 : push the docker image to docker hub 

stage('Push image to Hub'){
            steps{
                script{
                # log in to docker hub using withCredentials
                   withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {
                   sh 'docker login -u narendra04 -p ${dockerhubpwd}'

}
                   sh 'docker push narendra04/devops-integration'
                }
            }
        }

go to groovy syntax 
select : withCredentials
click add 
select : secret text 
variable : dockerhubpwd
credentilas : 

click add 
kind: scret text 
scret: password of docker hub
id:dockerhubpwd
click add 
click generate script 
copy above like it :                   withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {




then now you need to push this image to k8s 

go to jenkins ----> manage plugins ----> kubenrate continue deploys ----> install it 

if you want to downgrade this plug in :  kubenrate continue deploys
then go to jenkins ----> manage plugins --->advance  ----> deploy plugin 

provide it url 
click deploy 

then  started K8S minikubes 
then 

I need to sync my docker and K8s 
go to minikube ec2 instance and run below commnad 
#eval #(minikube -docker-env)
#docker images 
then 
create deployment file in our application 
then 
go to pipleline script 
add new stage like below 
 go to groovy syntax
then 
select sample step: kubernatesDeploy deploy to kubenrate 
then 
kubeconfig:  select add 
kind: kubenrates configurations
ID: k8sconfigpwd
kubeconfig:
select 
enter directly:
where you get it key of jubeconfig 
go to minikube 
go to root user 
#ls -al
we can see something call .kube 
#cd 'kube
#cat config 
copy this syntax and copy into enter directly:
then 
kubeconfig: select kubeconfig credentail 
then generate pipeline 


   stage('Deploy to k8s'){
            steps{
                script{
                    kubernetesDeploy (configs: 'deploymentservice.yaml',kubeconfigId: 'k8sconfigpwd')
                }

then save it pipleline script and run pipelone 
once done 
then 
go to minikube 
check it 
#Kubectl get deploy 
#kubectl get pod 
#kubectl get service 
take clusterIp:ports

to get the service url for minikube 
#minikube service springoot-k8ssvc --url 
#minikube service nameofservcie  --url 

